services:
    backend:
        build:
            context: .
            dockerfile: apps/backend/Dockerfile
        volumes:
            - ./apps/backend:/app
            - ./apps/frontend:/app/frontend
        secrets:
            - db_password
            - deepgram_api_key
        env_file:
            - .env
        environment:
            PORT: ${PORT}
            DATABASE_HOST: ${DB_HOST}
            DATABASE_NAME: ${MYSQL_DATABASE}
            DB_USER: ${DB_USER}
            DB_PASSWORD_FILE: /run/secrets/db_password
            DEEPGRAM_API_KEY_FILE: /run/secrets/deepgram_api_key
        ports:
            - "${PORT}:${PORT}"
        networks:
            - app-network
        depends_on:
            database:
                condition: service_healthy
    database:
        image: mysql:8.4.4
        ports:
            - "3306:3306"
        env_file:
            - .env
        environment:
            MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
            MYSQL_DATABASE: ${MYSQL_DATABASE}
        volumes:
            - db_data:/var/lib/mysql
            - ./apps/database/tables.sql:/docker-entrypoint-initdb.d/tables.sql
            - ./apps/database/setup.sh:/docker-entrypoint-initdb.d/setup.sh
        restart: always
        networks:
            - app-network
        healthcheck:
            test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p`cat /run/secrets/mysql_root_password`"]
            interval: 1s
            timeout: 1s
            retries: 5
            start_period: 3s
        secrets:
            - mysql_root_password

networks:
  app-network:
    driver: bridge

volumes:
    db_data:
    
secrets:
    mysql_root_password:
        file: ./secrets/root_password
    deepgram_api_key:
        file: ./secrets/deepgram_api_key
    db_password:
        file: ./secrets/db_password